name: Terraform Verify
on:
  pull_request:
    branches:
      - main
      - lab9

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Terraform Validation
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      # Step 3: Fetch changed files
      - name: Fetch changed files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"

      # Step 4: Validate Terraform formatting
      - name: Validate terraform fmt
        run: |
          set +e

          echo "CHECK_STATUS=0" >> $GITHUB_ENV

          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            echo "Checking terraform fmt on ${changed_file}..."

            if [[ $changed_file == *.tf ]]; then
              terraform fmt -check $changed_file
              FMT_STATUS=$(echo $?)

              if [[ $FMT_STATUS -ne 0 ]]; then
                echo "❌ terraform fmt failed - ${changed_file}" >> $GITHUB_STEP_SUMMARY
                echo "CHECK_STATUS=1" >> $GITHUB_ENV
              fi
            fi
          done

      # Step 5: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 6: Validate Terraform syntax
      - name: Terraform Validate
        run: terraform validate

      # Step 7: Install tflint
      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      # Step 8: Run tflint
      - name: Run tflint
        run: tflint

      # Step 9: Fail the job if any checks failed
      - name: Process check
        if: always()
        run: exit $CHECK_STATUS